// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: users.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (id, created_at, modeified_at, name )
VALUES ( $1, $2, $3, $4)
RETURNING id, created_at, modeified_at, name
`

type CreateUserParams struct {
	ID          uuid.UUID
	CreatedAt   time.Time
	ModeifiedAt time.Time
	Name        string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.ID,
		arg.CreatedAt,
		arg.ModeifiedAt,
		arg.Name,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.ModeifiedAt,
		&i.Name,
	)
	return i, err
}
